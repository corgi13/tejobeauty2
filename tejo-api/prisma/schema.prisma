generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             String   @id @default(uuid())
  name           String?
  email          String   @unique
  passwordHash   String
  isAdmin        Boolean  @default(false)
  customerGroup  String?
  createdAt      DateTime @default(now())
  lifetimeSpend  Decimal  @default(0)
  reviews        Review[]
  orders         Order[]
}

model Product {
  id              String    @id @default(uuid())
  name            String
  slug            String    @unique
  description     String
  price           Decimal
  images          String[]
  category        String
  subcategory     String?
  brand           String
  countInStock    Int       @default(0)
  rating          Decimal   @default(0)
  numReviews      Int       @default(0)
  attributes      Json?
  translations    Json?
  howToUse        Json?
  ingredients     Json?
  badges          String[]
  metaTitle       Json?
  metaDescription Json?
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
  variants        ProductVariant[]
  reviews         Review[]
}

model ProductVariant {
  id         String   @id @default(uuid())
  productId  String
  product    Product  @relation(fields: [productId], references: [id])
  sku        String
  name       String
  price      Decimal?
  stock      Int      @default(0)
  attributes Json?
  images     String[]
}

model Review {
  id               String   @id @default(uuid())
  rating           Int
  comment          String
  userId           String
  productId        String
  createdAt        DateTime @default(now())
  imageUrls        String[]
  verifiedPurchase Boolean  @default(false)
  approved         Boolean  @default(false)
  user             User     @relation(fields: [userId], references: [id])
  product          Product  @relation(fields: [productId], references: [id])
}

model BlogPost {
  id           String   @id @default(uuid())
  title        String
  slug         String   @unique
  content      String
  excerpt      String
  image        String?
  tags         String[]
  translations Json?
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}

model Coupon {
  id         String   @id @default(uuid())
  code       String   @unique
  type       String
  value      Decimal?
  startsAt   DateTime?
  endsAt     DateTime?
  active     Boolean  @default(true)
  usageLimit Int?
  usedCount  Int      @default(0)
}

model Order {
  id             String   @id @default(uuid())
  userId         String?
  status         String   @default("created")
  total          Decimal  @default(0)
  currency       String
  paymentProvider String
  paymentId      String?
  shippingAddress Json
  billingAddress  Json
  itemsTotal     Decimal  @default(0)
  shippingTotal  Decimal  @default(0)
  discountTotal  Decimal  @default(0)
  taxTotal       Decimal  @default(0)
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  items          OrderItem[]
  user           User?    @relation(fields: [userId], references: [id])
}

model OrderItem {
  id         String   @id @default(uuid())
  orderId    String
  productId  String
  variantId  String?
  name       String
  sku        String?
  price      Decimal
  qty        Int
  image      String?
  attributes Json?
  order      Order    @relation(fields: [orderId], references: [id])
}

model InventoryMovement {
  id         String   @id @default(uuid())
  productId  String
  variantId  String?
  type       String
  qty        Int
  refType    String
  refId      String?
  createdAt  DateTime @default(now())
}

model B2BPrice {
  id         String  @id @default(uuid())
  productId  String
  variantId  String?
  customerGroup String
  price      Decimal
}

model Category {
  id           String   @id @default(uuid())
  slug         String   @unique
  name         String
  description  String
  parentId     String?
  translations Json
  image        String?
}

model PartnerRequest {
  id        String   @id @default(uuid())
  name      String
  company   String
  email     String
  phone     String?
  message   String
  status    String   @default("new")
  createdAt DateTime @default(now())
}

model Settings {
  id                    String  @id @default(uuid())
  freeShippingThreshold Decimal @default(0)
  loyaltyTiers          Json
}

model WebhookEvent {
  id         String   @id @default(uuid())
  provider   String
  eventId    String   @unique
  processedAt DateTime @default(now())
}

model AuditLog {
  id        String   @id @default(uuid())
  actorId   String?
  action    String
  entity    String
  entityId  String?
  createdAt DateTime @default(now())
}

